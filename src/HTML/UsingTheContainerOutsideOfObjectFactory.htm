<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<head>
		<title>Using Container independent of ObjectFactory</title>
	</head>
	<body>
	

    <p style="margin: 0px">
        New in version 2.5 is the ability to create an instance of the underlying Container 
        class independent of the static ObjectFactory class (actually, you always could 
        do this, but it&#39;s much easier in 2.5).&nbsp; The IContainer interface has 
        roughly the same methods as ObjectFactory (the only major difference is that 
        ObjectFactory.GetNamedInstance&lt;T&gt;(name) is IContainer.GetInstance&lt;T&gt;(name) )&nbsp; 
        You can build a Container with a single Registry object:</p>
    <p style="margin: 0px">
        &nbsp;</p>
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof1252\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue255;\red43\green145\blue175;}??\fs20             \cf3 var\cf0  container = \cf3 new\cf0  \cf4 Container\cf0 (\cf3 new\cf0  \cf4 BasicActionRegistry\cf0 ());}
-->
    <div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border: black thin solid;">
        <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <span style="color: blue;">var</span> container = <span style="color: blue;">new</span>
            <span style="color: #2b91af;">Container</span>(<span style="color: blue;">new</span>
            <span style="color: #2b91af;">BasicActionRegistry</span>());</p>
    </div>
<!--EndFragment-->
<p style="margin: 0px">
    &nbsp;</p>
<p style="margin: 0px">
    Or more commonly, you can build the Container in a manner very similar to the 
    ObjectFactory.Initialize() method.&nbsp; One of the constructors for Container 
    takes in an Action<ConfigurationExpression>&lt;ConfigurationExpression&gt; expression 
    that can be used to configure the Container in one atomic action like this code 
    below:</p>
<p style="margin: 0px">
    &nbsp;</p>
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof1252\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue255;\red43\green145\blue175;\red163\green21\blue21;}??\fs20             \cf3 var\cf0  container = \cf3 new\cf0  \cf4 Container\cf0 (x =&gt;\par ??            \{\par ??                x.Scan(scanner =&gt;\par ??                \{\par ??                    scanner.Assembly(\cf5 "StructureMap.Testing.Widget"\cf0 )\par ??                \});\par ??\par ??                x.ForRequestedType&lt;\cf4 Rule\cf0 &gt;().Use&lt;\cf4 ColorRule\cf0 &gt;()\par ??                    .WithCtorArg(\cf5 "Color"\cf0 ).EqualTo(\cf5 "Blue"\cf0 );\par ??\par ??\par ??                x.IncludeConfigurationFromConfigFile = \cf3 true\cf0 ;\par ??\par ??                x.AddConfigurationFromXmlFile(\cf5 "ExternalFile.xml"\cf0 );\par ??            \});}
-->
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border: black thin solid;">
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <span style="color: blue;">var</span> container = <span style="color: blue;">new</span>
        <span style="color: #2b91af;">Container</span>(x =&gt;</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        x.Scan(scanner =&gt;</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        {</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        scanner.Assembly(<span style="color: #a31515;">&quot;StructureMap.Testing.Widget&quot;</span>)</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        });</p>
    <p style="margin: 0px;">
        &nbsp;</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        x.ForRequestedType&lt;<span style="color: #2b91af;">Rule</span>&gt;().Use&lt;<span 
            style="color: #2b91af;">ColorRule</span>&gt;()</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        .WithCtorArg(<span style="color: #a31515;">&quot;Color&quot;</span>).EqualTo(<span 
            style="color: #a31515;">&quot;Blue&quot;</span>);</p>
    <p style="margin: 0px;">
        &nbsp;</p>
    <p style="margin: 0px;">
        &nbsp;</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        x.IncludeConfigurationFromConfigFile = <span style="color: blue;">true</span>;</p>
    <p style="margin: 0px;">
        &nbsp;</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        x.AddConfigurationFromXmlFile(<span style="color: #a31515;">&quot;ExternalFile.xml&quot;</span>);</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });</p>
</div>
<!--EndFragment-->
<p style="margin: 0px">
    &nbsp;</p>
<p style="margin: 0px">
    The ConfigurationExpression class is a Registry, so you can use all of the 
    Registry DSL in the Lambda expression passed into the Container constructor.&nbsp; 
    In addition to the Registry DSL, you also have these options:</p>
<p style="margin: 0px">
    &nbsp;</p>
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof1252\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue255;\red43\green145\blue175;}??\fs20         \cf3 bool\cf0  IncludeConfigurationFromConfigFile \{ \cf3 set\cf0 ; \}\par ??        \cf3 void\cf0  AddRegistry&lt;T&gt;() \cf3 where\cf0  T : \cf4 Registry\cf0 , \cf3 new\cf0 ();\par ??        \cf3 void\cf0  AddRegistry(\cf4 Registry\cf0  registry);\par ??        \cf3 void\cf0  AddConfigurationFromXmlFile(\cf3 string\cf0  fileName);\par ??        \cf3 void\cf0  AddConfigurationFromNode(\cf4 XmlNode\cf0  node);}
-->
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border: black thin solid;">
    <p style="margin: 0px;">
&nbsp;</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">bool</span> 
        IncludeConfigurationFromConfigFile { <span style="color: blue;">set</span>; }</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">void</span> 
        AddRegistry&lt;T&gt;() <span style="color: blue;">where</span> T :
        <span style="color: #2b91af;">Registry</span>, <span style="color: blue;">new</span>();</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">void</span> 
        AddRegistry(<span style="color: #2b91af;">Registry</span> registry);</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">void</span> 
        AddConfigurationFromXmlFile(<span style="color: blue;">string</span> fileName);</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">void</span> 
        AddConfigurationFromNode(<span style="color: #2b91af;">XmlNode</span> node);</p>
    <p style="margin: 0px;">
        &nbsp;</p>
</div>
<!--EndFragment-->
<p style="margin: 0px">
    &nbsp;</p>
<p style="margin: 0px">
    These other options will allow you to add configuration from additional Registry 
    classes, the StructureMap section in the App.config file, or other Xml files.</p>
<p style="margin: 0px">
    &nbsp;</p>
<p style="margin: 0px">
    Lastly, you can create a Container directly with a no argument constructor, then 
    use the Inject() methods or later use the Configure() method.</p>
<p style="margin: 0px">
    &nbsp;</p>
<!--
{\rtf1\ansi\ansicpg\lang1024\noproof1252\uc1 \deff0{\fonttbl{\f0\fnil\fcharset0\fprq1 Courier New;}}{\colortbl;??\red0\green0\blue0;\red255\green255\blue255;\red43\green145\blue175;\red0\green0\blue255;}??\fs20         [\cf3 Test\cf0 ]\par ??        \cf4 public\cf0  \cf4 void\cf0  Add_an_assembly_on_the_fly_and_pick_up_plugins2()\par ??        \{\par ??            \cf4 var\cf0  container = \cf4 new\cf0  \cf3 Container\cf0 ();\par ??            container.Configure(\par ??                registry =&gt;\par ??                \{\par ??                    registry.Scan(x =&gt;\par ??                    \{\par ??                        x.AssemblyContainingType(\cf4 typeof\cf0  (\cf3 IService\cf0 &lt;&gt;));\par ??                        x.AddAllTypesOf(\cf4 typeof\cf0  (\cf3 IService\cf0 &lt;&gt;));\par ??                    \});\par ??                \}\par ??                );\par ??\par ??            \cf3 IList\cf0 &lt;\cf3 IService\cf0 &lt;\cf4 string\cf0 &gt;&gt; instances = container.GetAllInstances&lt;\cf3 IService\cf0 &lt;\cf4 string\cf0 &gt;&gt;();\par ??            instances.Count.ShouldBeGreaterThan(0);\par ??        \}}
-->
<div style="font-family: Courier New; font-size: 10pt; color: black; background: white; border: black thin solid;">
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [<span style="color: #2b91af;">Test</span>]</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: blue;">public</span>
        <span style="color: blue;">void</span> 
        Add_an_assembly_on_the_fly_and_pick_up_plugins2()</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <span style="color: blue;">var</span> container = <span style="color: blue;">new</span>
        <span style="color: #2b91af;">Container</span>();</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; container.Configure(</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        registry =&gt;</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        {</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        registry.Scan(x =&gt;</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        {</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        x.AssemblyContainingType(<span style="color: blue;">typeof</span> (<span 
            style="color: #2b91af;">IService</span>&lt;&gt;));</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        x.AddAllTypesOf(<span style="color: blue;">typeof</span> (<span 
            style="color: #2b91af;">IService</span>&lt;&gt;));</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        });</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        }</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        );</p>
    <p style="margin: 0px;">
        &nbsp;</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <span style="color: #2b91af;">IList</span>&lt;<span style="color: #2b91af;">IService</span>&lt;<span 
            style="color: blue;">string</span>&gt;&gt; instances = container.GetAllInstances&lt;<span 
            style="color: #2b91af;">IService</span>&lt;<span style="color: blue;">string</span>&gt;&gt;();</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        instances.Count.ShouldBeGreaterThan(0);</p>
    <p style="margin: 0px;">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
</div>
<!--EndFragment-->
<p style="margin: 0px">
    &nbsp;</p>
<p style="margin: 0px">
    &nbsp;</p>
	
	</body>
</html>